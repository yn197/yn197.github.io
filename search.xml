<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Kuboard安装</title>
      <link href="/2023/09/20/kuboard-an-zhuang/"/>
      <url>/2023/09/20/kuboard-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h1 id="Kuboard安装"><a href="#Kuboard安装" class="headerlink" title="Kuboard安装"></a>Kuboard安装</h1><p>1.uboard v3 在 K8S 中的安装（主）</p><pre class="line-numbers language-none"><code class="language-none">kubectl apply -f https://addons.kuboard.cn/kuboard/kuboard-v3-swr.yaml#等待 Kuboard v3 就绪watch kubectl get pods -n kuboard访问Kuboard网址：your-node-ip-address:30080用户名：admin密码：Kuboard123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.Kuboard NFS</p><p>2.1在master节点中安装nfs客户端和服务器端</p><pre class="line-numbers language-none"><code class="language-none">apt-get install nfs-commonsudo apt-get install nfs-kernel-server#共享目录配置文件#nfs主节点echo "/nfs/data/ *(insecure,rw,sync,no_root_squash)" &gt; /etc/exports#启动NFS服务sudo /etc/init.d/nfs-kernel-server restart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3Kuboard创建存储类</p><p>登陆Kuboard，点击集群管理-&gt;存储-&gt;存储类-&gt;创建存储类</p><pre class="line-numbers language-none"><code class="language-none">存储类名称：随便填限定名称空间：不勾选存储类类型：NFSNFS Server：master节点的ipNFS Path ：/nfs/data （上面共享的目录）NFS可使用容量：100Gi （只是可使用，不分配空间）MountOptions：vers=4,minorversion=0,noresvport根据提示在master中先行测试，若测试报错，可尝试不要noresvport，或将vers改为5一路保存+确定<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参考文档资料地址:</p><p><a href="https://blog.csdn.net/narcissus2_/article/details/119423389">在ubuntu18.04上搭建kubernetes（保姆级教程）_Mr. Water的博客-CSDN博客</a> </p>]]></content>
      
      
      <categories>
          
          <category> K8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> K8s </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K8s别名</title>
      <link href="/2023/09/20/kubernetes-de-chang-yong-ming-ling-bie-ming-shi-yong/"/>
      <url>/2023/09/20/kubernetes-de-chang-yong-ming-ling-bie-ming-shi-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="kubernetes的常用命令"><a href="#kubernetes的常用命令" class="headerlink" title="kubernetes的常用命令"></a>kubernetes的常用命令</h1><pre class="line-numbers language-none"><code class="language-none"># This command is used a LOT both below and in daily lifealias k=kubectl# Execute a kubectl command against all namespacesalias kca='_kca(){ kubectl "$@" --all-namespaces;  unset -f _kca; }; _kca'# Apply a YML filealias kaf='kubectl apply -f'# Drop into an interactive terminal on a containeralias keti='kubectl exec -t -i'# Manage configuration quickly to switch contexts between local, dev ad staging.alias kcuc='kubectl config use-context'alias kcsc='kubectl config set-context'alias kcdc='kubectl config delete-context'alias kccc='kubectl config current-context'# List all contextsalias kcgc='kubectl config get-contexts'# General aliasesalias kdel='kubectl delete'alias kdelf='kubectl delete -f'# Pod management.alias kgp='kubectl get pods'alias kgpa='kubectl get pods --all-namespaces'alias kgpw='kgp --watch'alias kgpwide='kgp -o wide'alias kep='kubectl edit pods'alias kdp='kubectl describe pods'alias kdelp='kubectl delete pods'alias kgpall='kubectl get pods --all-namespaces -o wide'# get pod by label: kgpl "app=myapp" -n mynsalias kgpl='kgp -l'# get pod by namespace: kgpn kube-system"alias kgpn='kgp -n'# Service management.alias kgs='kubectl get svc'alias kgsa='kubectl get svc --all-namespaces'alias kgsw='kgs --watch'alias kgswide='kgs -o wide'alias kes='kubectl edit svc'alias kds='kubectl describe svc'alias kdels='kubectl delete svc'# Ingress managementalias kgi='kubectl get ingress'alias kgia='kubectl get ingress --all-namespaces'alias kei='kubectl edit ingress'alias kdi='kubectl describe ingress'alias kdeli='kubectl delete ingress'# Namespace managementalias kgns='kubectl get namespaces'alias kens='kubectl edit namespace'alias kdns='kubectl describe namespace'alias kdelns='kubectl delete namespace'alias kcn='kubectl config set-context --current --namespace'# ConfigMap managementalias kgcm='kubectl get configmaps'alias kgcma='kubectl get configmaps --all-namespaces'alias kecm='kubectl edit configmap'alias kdcm='kubectl describe configmap'alias kdelcm='kubectl delete configmap'# Secret managementalias kgsec='kubectl get secret'alias kgseca='kubectl get secret --all-namespaces'alias kdsec='kubectl describe secret'alias kdelsec='kubectl delete secret'# Deployment management.alias kgd='kubectl get deployment'alias kgda='kubectl get deployment --all-namespaces'alias kgdw='kgd --watch'alias kgdwide='kgd -o wide'alias ked='kubectl edit deployment'alias kdd='kubectl describe deployment'alias kdeld='kubectl delete deployment'alias ksd='kubectl scale deployment'alias krsd='kubectl rollout status deployment'# Rollout management.alias kgrs='kubectl get replicaset'alias kdrs='kubectl describe replicaset'alias kers='kubectl edit replicaset'alias krh='kubectl rollout history'alias kru='kubectl rollout undo'# Statefulset management.alias kgss='kubectl get statefulset'alias kgssa='kubectl get statefulset --all-namespaces'alias kgssw='kgss --watch'alias kgsswide='kgss -o wide'alias kess='kubectl edit statefulset'alias kdss='kubectl describe statefulset'alias kdelss='kubectl delete statefulset'alias ksss='kubectl scale statefulset'alias krsss='kubectl rollout status statefulset'# Port forwardingalias kpf="kubectl port-forward"# Tools for accessing all informationalias kga='kubectl get all'alias kgaa='kubectl get all --all-namespaces'# Logsalias kl='kubectl logs'alias kl1h='kubectl logs --since 1h'alias kl1m='kubectl logs --since 1m'alias kl1s='kubectl logs --since 1s'alias klf='kubectl logs -f'alias klf1h='kubectl logs --since 1h -f'alias klf1m='kubectl logs --since 1m -f'alias klf1s='kubectl logs --since 1s -f'# File copyalias kcp='kubectl cp'# Node Managementalias kgno='kubectl get nodes'alias keno='kubectl edit node'alias kdno='kubectl describe node'alias kdelno='kubectl delete node'# PVC management.alias kgpvc='kubectl get pvc'alias kgpvca='kubectl get pvc --all-namespaces'alias kgpvcw='kgpvc --watch'alias kepvc='kubectl edit pvc'alias kdpvc='kubectl describe pvc'alias kdelpvc='kubectl delete pvc'# Service account management.alias kdsa="kubectl describe sa"alias kdelsa="kubectl delete sa"# DaemonSet management.alias kgds='kubectl get daemonset'alias kgdsw='kgds --watch'alias keds='kubectl edit daemonset'alias kdds='kubectl describe daemonset'alias kdelds='kubectl delete daemonset'# CronJob management.alias kgcj='kubectl get cronjob'alias kecj='kubectl edit cronjob'alias kdcj='kubectl describe cronjob'alias kdelcj='kubectl delete cronjob'# Job management.alias kgj='kubectl get job'alias kej='kubectl edit job'alias kdj='kubectl describe job'alias kdelj='kubectl delete job'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> K8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> K8s </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes部署</title>
      <link href="/2023/09/20/kubernetes-bu-shu/"/>
      <url>/2023/09/20/kubernetes-bu-shu/</url>
      
        <content type="html"><![CDATA[<h1 id="kubernetes部署"><a href="#kubernetes部署" class="headerlink" title="kubernetes部署"></a>kubernetes部署</h1><h2 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1.环境准备"></a>1.环境准备</h2><pre class="line-numbers language-none"><code class="language-none">ubuntu-22.10-live-server-amd64Docker version 23.0.3, build 3e7cbfdk8s: 1.21.3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="1-1vi编辑工具包下载"><a href="#1-1vi编辑工具包下载" class="headerlink" title="1.1vi编辑工具包下载"></a>1.1vi编辑工具包下载</h3><pre class="line-numbers language-none"><code class="language-none">#方便修改用户名密码，以及主机信息apt-get install vimvi /etc/ssh/sshd_config# Authentication:LoginGraceTime 120#PermitRootLogin without-passwordPermitRootLogin yesStrictModes yes重启ssh服务 /etc/init.d/ssh restart  重新修改密码 sudo passwd root <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-2关闭分区"><a href="#1-2关闭分区" class="headerlink" title="1.2关闭分区"></a>1.2关闭分区</h3><pre class="line-numbers language-none"><code class="language-none">#临时关闭swapoff -a#永久关闭vi /etc/fstab<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-3时间同步"><a href="#1-3时间同步" class="headerlink" title="1.3时间同步"></a>1.3时间同步</h3><pre class="line-numbers language-none"><code class="language-none">ubuntu更改时区（东八区）tzselectln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="1-4关闭防火墙"><a href="#1-4关闭防火墙" class="headerlink" title="1.4关闭防火墙"></a>1.4关闭防火墙</h3><pre class="line-numbers language-none"><code class="language-none">sudo apt-get install ufwsudo ufw disable<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="1-5添加其他的主机信息"><a href="#1-5添加其他的主机信息" class="headerlink" title="1.5添加其他的主机信息"></a>1.5添加其他的主机信息</h3><pre class="line-numbers language-none"><code class="language-none">192.168.1.90 k2192.168.1.238 k3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="1-6关闭selinux"><a href="#1-6关闭selinux" class="headerlink" title="1.6关闭selinux"></a>1.6关闭selinux</h3><pre class="line-numbers language-none"><code class="language-none">sudo apt install selinux-utilssetenforce 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="1-7桥接的IPV4流量传递到Iptables"><a href="#1-7桥接的IPV4流量传递到Iptables" class="headerlink" title="1.7桥接的IPV4流量传递到Iptables"></a>1.7桥接的IPV4流量传递到Iptables</h3><pre class="line-numbers language-none"><code class="language-none">cat &gt; /etc/sysctl.d/k8s.conf &lt;&lt;EOFnet.bridge.bridge-nf-call-ip6tables = 1net.bridge.bridge-nf-call-iptables = 1EOFsysctl --system #生效<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-8配置Docker环境"><a href="#1-8配置Docker环境" class="headerlink" title="1.8配置Docker环境"></a>1.8配置Docker环境</h3><h3 id="1-9配置k8s资源"><a href="#1-9配置k8s资源" class="headerlink" title="1.9配置k8s资源"></a>1.9配置k8s资源</h3><pre class="line-numbers language-none"><code class="language-none">curl -s https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | sudo apt-key add -echo "deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main" &gt; /etc/apt/sources.list.d/kubernetes.listapt-get update<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="1-10安装kubeadm-初始化cluster-，kubelet-启动pod-和kubectl-k8s命令工具"><a href="#1-10安装kubeadm-初始化cluster-，kubelet-启动pod-和kubectl-k8s命令工具" class="headerlink" title="1.10安装kubeadm(初始化cluster)，kubelet(启动pod)和kubectl(k8s命令工具)"></a>1.10安装kubeadm(初始化cluster)，kubelet(启动pod)和kubectl(k8s命令工具)</h3><pre class="line-numbers language-none"><code class="language-none">apt install -y kubelet=1.21.3-00 kubeadm=1.21.3-00 kubectl=1.21.3-00<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="1-11设置开机启动并启动kubelet"><a href="#1-11设置开机启动并启动kubelet" class="headerlink" title="1.11设置开机启动并启动kubelet"></a>1.11设置开机启动并启动kubelet</h3><pre class="line-numbers language-none"><code class="language-none">systemctl enable kubelet &amp;&amp; systemctl start kubelet<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-拉取镜像-新建脚本k8s-sh"><a href="#2-拉取镜像-新建脚本k8s-sh" class="headerlink" title="2.拉取镜像,新建脚本k8s.sh"></a>2.拉取镜像,新建脚本k8s.sh</h2><pre class="line-numbers language-none"><code class="language-none">#!/bin/bashimages=( kube-apiserver:v1.21.3 kube-controller-manager:v1.21.3 kube-scheduler:v1.21.3 kube-proxy:v1.21.3 pause:3.2 etcd:3.4.13-0)for imageName in ${images[@]} ; do  docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/${imageName}  docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/${imageName} k8s.gcr.io/${imageName}  docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/${imageName}donedocker pull coredns/coredns:1.8.0docker tag coredns/coredns:1.8.0 registry.aliyuncs.com/google_containers/coredns:v1.8.0docker rmi coredns/coredns:1.8.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后执行./k8s.sh</p><h2 id="3-初始化Master"><a href="#3-初始化Master" class="headerlink" title="3.初始化Master"></a>3.初始化Master</h2><pre class="line-numbers language-none"><code class="language-none">kubeadm init --image-repository=registry.aliyuncs.com/google_containers  --pod-network-cidr=10.244.0.0/16 --service-cidr=10.96.0.0/12<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-使用kubectl"><a href="#4-使用kubectl" class="headerlink" title="4.使用kubectl"></a>4.使用kubectl</h2><pre class="line-numbers language-none"><code class="language-none">mkdir -p $HOME/.kubesudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/configsudo chown $(id -u):$(id -g) $HOME/.kube/config<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="5-加入子节点"><a href="#5-加入子节点" class="headerlink" title="5.加入子节点"></a>5.加入子节点</h2><pre class="line-numbers language-none"><code class="language-none">kubeadm join 172.16.1.90:6443 --token 9pslv8.6tbrux0ksur0wgav --discovery-token-ca-cert-hash sha256:3709a3ce5a0ec819308d97a97c445a0414b0ed07a855cb3f948c288f38c7e35c 若没有记录，也可在master节点用以下操作获取：kubeadm token create --print-join-command<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="6-安装网络插件flannel"><a href="#6-安装网络插件flannel" class="headerlink" title="6.安装网络插件flannel"></a>6.安装网络插件flannel</h2><pre class="line-numbers language-none"><code class="language-none">sudo kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.ymlkubectl get cs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="7-解决组件状态Unhealthy"><a href="#7-解决组件状态Unhealthy" class="headerlink" title="7.解决组件状态Unhealthy"></a>7.解决组件状态Unhealthy</h2><pre class="line-numbers language-none"><code class="language-none">需要用#注释掉/etc/kubernetes/manifests下的kube-controller-manager.yaml和kube-scheduler.yaml的- – port=0注释完后重启服务systemctl restart kubelet.service再次查看组件状态（需要稍等）kubectl get cs查看节点状态kubectl get node<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> K8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> K8s </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes常用操作</title>
      <link href="/2023/09/20/kubernetes-chang-yong-cao-zuo/"/>
      <url>/2023/09/20/kubernetes-chang-yong-cao-zuo/</url>
      
        <content type="html"><![CDATA[<p>Kubernetes常用操作</p><p>1.资源创建方式</p><ul><li>命令行</li><li>YAML</li></ul><p>2.Namespace </p><p>2.1名称空间用来隔离资源 </p><pre class="line-numbers language-none"><code class="language-none">kubectl create ns hellokubectl delete ns hello<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>2.2 hello.yaml</p><pre class="line-numbers language-none"><code class="language-none">apiVersion: v1kind: Namespacemetadata:  name: hello<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">kubectl apply -f hello.yamlkubectl get ns<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>3.Pod </p><p>运行中的一组容器，Pod是kubernetes中应用的最小单位. </p><pre class="line-numbers language-none"><code class="language-none">kubectl run mynginx --image=nginx -n hello# 查看default名称空间的Podkubectl get pod -n hello # 描述kubectl describe pod -n hello你自己的Pod名字# 删除kubectl delete pod Pod -n hello名字# 查看Pod的运行日志kubectl logs Pod -n hello名字# 每个Pod - k8s都会分配一个ipkubectl get pod -owide -n hello# 使用Pod的ip+pod里面运行容器的端口curl 10.244.1.26# 集群中的任意一个机器以及任意的应用都能通过Pod分配的ip来访问这个Pod<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">apiVersion: v1kind: Podmetadata:  labels:    run: mynginx  name: mynginx  namespace: hello#  namespace: defaultspec:  containers:  - image: nginx    name: mynginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>pod.yaml</p><pre class="line-numbers language-none"><code class="language-none">apiVersion: v1kind: Podmetadata:  labels:    run: myapp  name: myapp  namespace: hellospec:  containers:  - image: nginx    name: nginx  - image: tomcat:8.5.68    name: tomcat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">kubectl get pod -n helloNAME      READY   STATUS    RESTARTS   AGEmyapp     2/2     Running   0          87smynginx   1/1     Running   0          6m49skubectl get pod -owide -n helloNAME      READY   STATUS    RESTARTS   AGE    IP            NODE   NOMINATED NODE   READINESS GATESmyapp     2/2     Running   0          100s   10.244.1.27   u2     &lt;none&gt;           &lt;none&gt;mynginx   1/1     Running   0          7m2s   10.244.1.26   u2     &lt;none&gt;           &lt;none&gt;#访问nginxcurl 10.244.1.27#访问tomcatcurl 10.244.1.27:8080 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4.Deployment </p><p>4.0进入pod</p><pre class="line-numbers language-none"><code class="language-none">kubectl exec -ti pod名字 -n kubesphere-system -- /bin/sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4.1.控制Pod，使Pod拥有多副本，自愈，扩缩容等能力 </p><pre class="line-numbers language-none"><code class="language-none"># 清除所有Pod，比较下面两个命令有何不同效果？kubectl run mynginx--image=nginx -n hellokubectl create deployment mytomcat --image=tomcat:8.5.68   -n hello# 自愈能力即使你删除了由deployment生成的pod，他还是会自己生成一份pod<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4.2 多副本</p><pre class="line-numbers language-none"><code class="language-none">kubectl create deployment my-dep --image=nginx --replicas=3 -n hello<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>delpyment.yaml</p><pre class="line-numbers language-none"><code class="language-none">apiVersion: apps/v1kind: Deploymentmetadata:  labels:    app: my-dep  name: my-dep  namespace: hellospec:  replicas: 3  selector:    matchLabels:      app: my-dep  template:    metadata:      labels:        app: my-dep    spec:      containers:      - image: nginx        name: nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4.3 扩缩容 </p><pre class="line-numbers language-none"><code class="language-none">kubectl scale --replicas=5 deployment/my-dep<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">kubectl edit deployment my-dep#修改 replicas<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>4.4 自愈&amp;故障转移 </p><ul><li>停机</li><li>删除Pod</li><li>容器崩溃</li></ul><p>4.5 滚动更新 </p><pre class="line-numbers language-none"><code class="language-none">kubectl set image deployment/my-dep nginx=nginx:1.16.1 --record -n hellokubectl rollout status deployment/my-dep -n hello# 修改 kubectl edit deployment/my-dep<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>4.6 版本回退 </p><pre class="line-numbers language-none"><code class="language-none">#历史记录kubectl rollout history deployment/my-dep -n hello #查看某个历史详情kubectl rollout history deployment/my-dep --revision=2 -n hello#回滚(回到上次)kubectl rollout undo deployment/my-dep -n hello#回滚(回到指定版本)kubectl rollout undo deployment/my-dep --to-revision=2 -n hello<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>更多：</p><p>除了Deployment，k8s还有 <code>StatefulSet</code> 、<code>DaemonSet</code> 、<code>Job</code>  等 类型资源。我们都称为 <code>工作负载</code>。</p><p>有状态应用使用  <code>StatefulSet</code>  部署，无状态应用使用 <code>Deployment</code> 部署</p><p>参考官方文档: <a href="https://kubernetes.io/zh-cn/docs/concepts/workloads/controllers/statefulset/">StatefulSet | Kubernetes</a> </p><p>5.Service </p><p>将一组 <a href="https://kubernetes.io/docs/concepts/workloads/pods/pod-overview/">Pods</a> 公开为网络服务的抽象方法。 </p><pre class="line-numbers language-none"><code class="language-none">#暴露Deploykubectl expose deployment my-dep --port=8000 --target-port=80 -n hello #使用标签检索Podkubectl get pod -l app=my-dep -n hello <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">apiVersion: v1kind: Servicemetadata:  labels:    app: my-dep  name: my-dep  namespace: hellospec:  selector:    app: my-dep  ports:  - port: 8000    protocol: TCP    targetPort: 80<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>5.1ClusterIP </p><pre class="line-numbers language-none"><code class="language-none"># 等同于没有--type的kubectl expose deployment my-dep --port=8000 --target-port=80 --type=ClusterIP -n hello<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>5.2 NodePort </p><pre class="line-numbers language-none"><code class="language-none">kubectl expose deployment my-dep --port=8002 --target-port=80 --type=NodePort -n hello<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">apiVersion: v1kind: Servicemetadata:  labels:    app: my-dep  name: my-depspec:  ports:  - port: 8002    protocol: TCP    targetPort: 80  selector:    app: my-dep  type: NodePort<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>NodePort范围在 30000-32767 之间</strong> </p><p>6.Ingress </p><p>6.1.安装 </p><pre class="line-numbers language-none"><code class="language-none">wget https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v0.47.0/deploy/static/provider/baremetal/deploy.yaml#修改镜像vi deploy.yaml#1.将image的值改为如下值：registry.cn-hangzhou.aliyuncs.com/lfy_k8s_images/ingress-nginx-controller:v0.46.0#2、在修改了image的上一层增加 hostNetwork: true，如图下所示#3、找到secretName将ingress-nginx-admission改为ingress-nginx-admission-token# 安装kubectl apply -f deploy.yaml# 检查安装的结果kubectl get pod,svc -n ingress-nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/..%5Cpic%5Cingress%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6.png"></p><p>6.2 查看状态</p><pre class="line-numbers language-none"><code class="language-none">kubectl get pod -n ingress-nginx <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果ingress-nginx-controller-7f6c55787f-2zmcv容器处于ContainerCreating，我们需要修改</p><pre class="line-numbers language-none"><code class="language-none">kubectl get secret -A | grep ingress-nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../pic/snipaste_20230422_180117.png"></p><p>6.3命令行修改方式</p><pre class="line-numbers language-none"><code class="language-none"># 复制 （自己的）-kp77g ,将下图对应的位置，加上-kp77gkubectl edit deployment ingress-nginx-controller -n ingress-nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/../pic/admin-token.png"></p><p>6.4查看状态已经可以了 </p><pre class="line-numbers language-none"><code class="language-none">kubectl get pod -n ingress-nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../pic/true.png"></p><p>6.5或者界面进行修改也是可以的</p><p><img src="/../pic/dashboard.png"></p><p>6.6验证</p><pre class="line-numbers language-none"><code class="language-none">kubectl get svc -A<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../pic/ingress-port.png"></p><p>访问节点<a href="http://ip+31436或者https//ip+31307%E9%83%BD%E6%98%AF%E5%8F%AF%E4%BB%A5%E7%9A%84">http://ip+31436或者https://ip+31307都是可以的</a></p><p>6.7域名访问</p><p>应用如下yaml，准备好测试环境 </p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> hello<span class="token punctuation">-</span>server<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">2</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> hello<span class="token punctuation">-</span>server  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> hello<span class="token punctuation">-</span>server    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> hello<span class="token punctuation">-</span>server        <span class="token key atrule">image</span><span class="token punctuation">:</span> registry.cn<span class="token punctuation">-</span>hangzhou.aliyuncs.com/lfy_k8s_images/hello<span class="token punctuation">-</span>server        <span class="token key atrule">ports</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">9000</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>demo  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>demo<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">2</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>demo  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>demo    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx        <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>demo  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>demo<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>demo  <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8000</span>    <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP    <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> hello<span class="token punctuation">-</span>server  <span class="token key atrule">name</span><span class="token punctuation">:</span> hello<span class="token punctuation">-</span>server<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> hello<span class="token punctuation">-</span>server  <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8000</span>    <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP    <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">9000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>域名访问 </p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Ingress  <span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>host<span class="token punctuation">-</span>bar<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">ingressClassName</span><span class="token punctuation">:</span> nginx  <span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> <span class="token string">"hello.atguigu.com"</span>    <span class="token key atrule">http</span><span class="token punctuation">:</span>      <span class="token key atrule">paths</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">pathType</span><span class="token punctuation">:</span> Prefix        <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">"/"</span>        <span class="token key atrule">backend</span><span class="token punctuation">:</span>          <span class="token key atrule">service</span><span class="token punctuation">:</span>            <span class="token key atrule">name</span><span class="token punctuation">:</span> hello<span class="token punctuation">-</span>server            <span class="token key atrule">port</span><span class="token punctuation">:</span>              <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">8000</span>  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> <span class="token string">"demo.atguigu.com"</span>    <span class="token key atrule">http</span><span class="token punctuation">:</span>      <span class="token key atrule">paths</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">pathType</span><span class="token punctuation">:</span> Prefix        <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">"/nginx"</span>  <span class="token comment"># 把请求会转给下面的服务，下面的服务一定要能处理这个路径，不能处理就是404</span>        <span class="token key atrule">backend</span><span class="token punctuation">:</span>          <span class="token key atrule">service</span><span class="token punctuation">:</span>            <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>demo  <span class="token comment">## java，比如使用路径重写，去掉前缀nginx</span>            <span class="token key atrule">port</span><span class="token punctuation">:</span>              <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">8000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>路径重写 </p><pre class="line-numbers language-none"><code class="language-none">apiVersion: networking.k8s.io/v1kind: Ingress  metadata:  annotations:    nginx.ingress.kubernetes.io/rewrite-target: /$2  name: ingress-host-barspec:  ingressClassName: nginx  rules:  - host: "hello.atguigu.com"    http:      paths:      - pathType: Prefix        path: "/"        backend:          service:            name: hello-server            port:              number: 8000  - host: "demo.atguigu.com"    http:      paths:      - pathType: Prefix        path: "/nginx(/|$)(.*)"  # 把请求会转给下面的服务，下面的服务一定要能处理这个路径，不能处理就是404        backend:          service:            name: nginx-demo  ## java，比如使用路径重写，去掉前缀nginx            port:              number: 8000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>流量限制 </p><pre class="line-numbers language-none"><code class="language-none">apiVersion: networking.k8s.io/v1kind: Ingressmetadata:  name: ingress-limit-rate  annotations:    nginx.ingress.kubernetes.io/limit-rps: "1"spec:  ingressClassName: nginx  rules:  - host: "haha.atguigu.com"    http:      paths:      - pathType: Exact        path: "/"        backend:          service:            name: nginx-demo            port:              number: 8000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> K8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> K8s </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装Java运行环境</title>
      <link href="/2023/09/20/linux-an-zhuang-jdk11/"/>
      <url>/2023/09/20/linux-an-zhuang-jdk11/</url>
      
        <content type="html"><![CDATA[<h1 id="linux安装jdk11"><a href="#linux安装jdk11" class="headerlink" title="linux安装jdk11"></a>linux安装jdk11</h1><h2 id="1-安装openjdk11"><a href="#1-安装openjdk11" class="headerlink" title="1.安装openjdk11"></a>1.安装openjdk11</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt-cache</span> search java11<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> openjdk-11-jdk<span class="token function">java</span> <span class="token parameter variable">-version</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2-默认安装的位置"><a href="#2-默认安装的位置" class="headerlink" title="2.默认安装的位置"></a>2.默认安装的位置</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/usr/lib/jvm/java-11-openjdk-amd64<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3.异常解决</p><p>E: Unable to locate package openjdk-11-jdk</p><pre class="line-numbers language-none"><code class="language-none">sudo add-apt-repository ppa:openjdk-r/ppa sudo apt-get updatesudo apt-get upgrade<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>修改源vi /etc/apt/sources.list</p><pre class="line-numbers language-none"><code class="language-none">#阿里源deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse#中科大deb https://mirrors.ustc.edu.cn/ubuntu/ focal main restricted universe multiversedeb-src https://mirrors.ustc.edu.cn/ubuntu/ focal main restricted universe multiversedeb https://mirrors.ustc.edu.cn/ubuntu/ focal-updates main restricted universe multiversedeb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-updates main restricted universe multiversedeb https://mirrors.ustc.edu.cn/ubuntu/ focal-backports main restricted universe multiversedeb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-backports main restricted universe multiversedeb https://mirrors.ustc.edu.cn/ubuntu/ focal-security main restricted universe multiversedeb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-security main restricted universe multiversedeb https://mirrors.ustc.edu.cn/ubuntu/ focal-proposed main restricted universe multiversedeb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse#华为源deb http://mirrors.163.com/ubuntu/ focal main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ focal-security main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ focal-updates main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ focal-proposed main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ focal-backports main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ focal main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ focal-security main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ focal-updates main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ focal-proposed main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ focal-backports main restricted universe multiverse# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-freedeb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-freedeb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-free# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-freedeb https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>还有可能源报错no public key</p><pre class="line-numbers language-none"><code class="language-none">原因在sources.list文件中加入了非ubuntu官方源，所以加入的源是被验证为不可信任的。解决方法导入该源公钥。E084DAB9为上图中公钥后八位gpg --keyserver keyserver.ubuntu.com --recv-keys E084DAB9gpg --export --armor E084DAB9 | sudo apt-key add -<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Jdk </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Jdk </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git的常用操作</title>
      <link href="/2023/09/20/git-chang-yong-cao-zuo/"/>
      <url>/2023/09/20/git-chang-yong-cao-zuo/</url>
      
        <content type="html"><![CDATA[<h1 id="ssh-keys无需登录设置提交代码"><a href="#ssh-keys无需登录设置提交代码" class="headerlink" title="ssh keys无需登录设置提交代码"></a>ssh keys无需登录设置提交代码</h1><h2 id="1-生成ssh-key"><a href="#1-生成ssh-key" class="headerlink" title="1.生成ssh-key"></a>1.生成ssh-key</h2><pre class="line-numbers language-none"><code class="language-none">ssh-keygen -t rsa -C "your_email.com"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-设置github中ssh认证SSH-keys-粘贴id-rsa-pub"><a href="#2-设置github中ssh认证SSH-keys-粘贴id-rsa-pub" class="headerlink" title="2.设置github中ssh认证SSH keys,粘贴id_rsa.pub"></a>2.设置github中ssh认证SSH keys,粘贴id_rsa.pub</h2><pre class="line-numbers language-none"><code class="language-none">下次使用git clone "ssh地址"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-下面是git的常规操作了"><a href="#3-下面是git的常规操作了" class="headerlink" title="3.下面是git的常规操作了"></a>3.下面是git的常规操作了</h2><h3 id="3-0配置自己的用户名和邮箱"><a href="#3-0配置自己的用户名和邮箱" class="headerlink" title="3.0配置自己的用户名和邮箱"></a>3.0配置自己的用户名和邮箱</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">"你的名字或昵称"</span><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">"你的邮箱"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-1进入项目文件夹，初始化一个Git仓库"><a href="#3-1进入项目文件夹，初始化一个Git仓库" class="headerlink" title="3.1进入项目文件夹，初始化一个Git仓库"></a>3.1进入项目文件夹，初始化一个Git仓库</h3><pre class="line-numbers language-none"><code class="language-none">git init <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-2加入当前目录下所有文件放入临时状态-暂存区-Staging-，可以使用如下命令"><a href="#3-2加入当前目录下所有文件放入临时状态-暂存区-Staging-，可以使用如下命令" class="headerlink" title="3.2加入当前目录下所有文件放入临时状态/暂存区(Staging)，可以使用如下命令"></a>3.2加入当前目录下所有文件放入临时状态/暂存区(Staging)，可以使用如下命令</h3><pre class="line-numbers language-none"><code class="language-none">git add .<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-3查看仓库当前文件提交状态（A：提交成功；AM：文件在添加到缓存之后又有改动）"><a href="#3-3查看仓库当前文件提交状态（A：提交成功；AM：文件在添加到缓存之后又有改动）" class="headerlink" title="3.3查看仓库当前文件提交状态（A：提交成功；AM：文件在添加到缓存之后又有改动）"></a>3.3查看仓库当前文件提交状态（A：提交成功；AM：文件在添加到缓存之后又有改动）</h3><pre class="line-numbers language-none"><code class="language-none">git status -s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-4从Git的暂存区提交版本到仓库，参数-m后为当次提交的备注信息"><a href="#3-4从Git的暂存区提交版本到仓库，参数-m后为当次提交的备注信息" class="headerlink" title="3.4从Git的暂存区提交版本到仓库，参数-m后为当次提交的备注信息"></a>3.4从Git的暂存区提交版本到仓库，参数-m后为当次提交的备注信息</h3><pre class="line-numbers language-none"><code class="language-none">git commit -m "项目初始化"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-5将本地的Git仓库信息推送上传到服务器"><a href="#3-5将本地的Git仓库信息推送上传到服务器" class="headerlink" title="3.5将本地的Git仓库信息推送上传到服务器"></a>3.5将本地的Git仓库信息推送上传到服务器</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> push git@github.com:yn197/k8s-study.git<span class="token comment">#一般不建议</span><span class="token function">git</span> push origin master <span class="token parameter variable">-f</span> 表示舍弃线上的文件，强制推送<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="3-6查看git提交的日志"><a href="#3-6查看git提交的日志" class="headerlink" title="3.6查看git提交的日志"></a>3.6查看git提交的日志</h3><pre class="line-numbers language-none"><code class="language-none">git log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-GIt提交大文件"><a href="#4-GIt提交大文件" class="headerlink" title="4.GIt提交大文件"></a>4.GIt提交大文件</h2><h3 id="4-1-下载git-lfs-windows-v3-3-0-https-git-lfs-github-com"><a href="#4-1-下载git-lfs-windows-v3-3-0-https-git-lfs-github-com" class="headerlink" title="4.1 下载git-lfs-windows-v3.3.0    https://git-lfs.github.com/"></a>4.1 下载git-lfs-windows-v3.3.0    <a href="https://git-lfs.github.com/">https://git-lfs.github.com/</a></h3><h3 id="4-2-在本地安装这个软件"><a href="#4-2-在本地安装这个软件" class="headerlink" title="4.2 在本地安装这个软件"></a>4.2 在本地安装这个软件</h3><h3 id="4-3执行命令"><a href="#4-3执行命令" class="headerlink" title="4.3执行命令"></a>4.3执行命令</h3><pre class="line-numbers language-none"><code class="language-none">#lfs初始化git lfs install#我这边以上传一个minio.exe的文件为例git lfs track "*.exe"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-4添加-gitattributes（配置文件，缺少它执行其他git操作可能会有问题，具体作用不详述）"><a href="#4-4添加-gitattributes（配置文件，缺少它执行其他git操作可能会有问题，具体作用不详述）" class="headerlink" title="4.4添加.gitattributes（配置文件，缺少它执行其他git操作可能会有问题，具体作用不详述）"></a>4.4添加.gitattributes（配置文件，缺少它执行其他git操作可能会有问题，具体作用不详述）</h3><pre class="line-numbers language-none"><code class="language-none">git add .gitattributes<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4-5添加要上传（push）的文件"><a href="#4-5添加要上传（push）的文件" class="headerlink" title="4.5添加要上传（push）的文件"></a>4.5添加要上传（push）的文件</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">add</span> *.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4-6-其他补充-突然有一天连接不上了"><a href="#4-6-其他补充-突然有一天连接不上了" class="headerlink" title="4.6 其他补充(突然有一天连接不上了)"></a>4.6 其他补充(突然有一天连接不上了)</h3><p>ssh: connect to host github.com port 22: Connection timed out</p><pre class="line-numbers language-none"><code class="language-none">测试试下是否还可连接ssh -T git@github.com  否则cd ~/.ssh创建一个config文件内容如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>config</p><pre class="line-numbers language-none"><code class="language-none">Host github.comUser 注册github的邮箱Hostname ssh.github.comPreferredAuthentications publickeyIdentityFile ~/.ssh/id_rsaPort 443<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行命令回车即可</p><pre class="line-numbers language-none"><code class="language-none">ssh -T git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4.7push文件报错</p><pre class="line-numbers language-none"><code class="language-none">To xxxx项目 ! [rejected]        main -&gt; main (fetch first)error: failed to push some refs to 'xxxx项目.git'hint: Updates were rejected because the remote contains work that you dohint: not have locally. This is usually caused by another repository pushinghint: to the same ref. You may want to first integrate the remote changeshint: (e.g., 'git pull ...') before pushing again.hint: See the 'Note about fast-forwards' in 'git push --help' for details<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">git pull --rebase origin main<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再执行</p><pre class="line-numbers language-none"><code class="language-none">git push -u origin main<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参考地址：</p><p><a href="https://gitee.com/help/articles/4114#article-header0">https://gitee.com/help/articles/4114#article-header0</a></p><p><a href="https://blog.csdn.net/weixin_45405814/article/details/107080156">如何在GitHub上传大文件（≥100M）_github大文件_weixin_45405814的博客-CSDN博客</a> </p><p><a href="https://blog.csdn.net/hzyhhhwc/article/details/125655397">Git在push推送的时候报错：Donehint: not have locally. This is usually caused by another repository pushinghi_铁血码农-小何的博客-CSDN博客</a> </p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/09/17/hello-world/"/>
      <url>/2023/09/17/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
